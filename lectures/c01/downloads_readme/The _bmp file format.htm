<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0059)http://fortunecity.com/skyscraper/windows/364/bmpffrmt.html -->
<HTML><HEAD><TITLE>The .bmp file format</TITLE>
<META http-equiv=Content-Type content="text/html; charset=windows-1252">
<META content=index name=robots>
<META 
content="A complete explanation of the standard Windows bitmap file format (.bmp/.dib)" 
name=description>
<META content="hetzl@teleweb.at (Stefan Hetzl)" name=author>
<META 
content="bmp file format, bitmap file format, bmp, dib, device independent bitmap, bitmap format, bitmap" 
name=keywords>
<META content="MSHTML 6.00.2900.6036" name=GENERATOR></HEAD>
<BODY text=#ffffff vLink=#00c000 aLink=#ff0000 link=#00ff00 bgColor=#000000>
<CENTER>

<TABLE id=fcnavbartable style="VISIBILITY: hidden" cellSpacing=0 cellPadding=0 
width=730 border=0>
  <TBODY>
  <TR id=fcnavbartablerow align=middle>
    <TD>
      <TABLE cellSpacing=0 cellPadding=0 width="100%" border=0>
        <TBODY>
        <TR align=middle>
          <TD width="3%"><A id=fcnavlogo href="http://www.fortunecity.com/" 
            target=_new><IMG height=45 
            alt="web hosting, domain name, free web site, email address" 
            src="The _bmp file format_files/fc_mp_logo_left.gif" width=160 
            border=0></A></TD>
          <TD id=fctdhosting width="22%"><A id=fcnavhosting 
            style="FONT-WEIGHT: bold; FONT-SIZE: 11px; FONT-FAMILY: Verdana,sans-serif" 
            href="http://www.fortunecity.com/?sid=fcnavhosting" target=_new>Web 
            hosting</A></TD>
          <TD id=fctddomains width="24%"><A id=fcnavdomains 
            style="FONT-WEIGHT: bold; FONT-SIZE: 11px; FONT-FAMILY: Verdana,sans-serif" 
            href="http://www.fortunecity.com/email/" target=_new>Custom 
          Email</A></TD>
          <TD id=fctdemail width="26%"><A id=fcnavmpa 
            style="FONT-WEIGHT: bold; FONT-SIZE: 11px; FONT-FAMILY: Verdana,sans-serif" 
            href="http://www.fortunecity.com/sitebuilder/" 
            target=_new>SiteBuilder</A></TD>
          <TD id=fcnavsrchsub width="2%"><IMG height=45 alt="" 
            src="The _bmp file format_files/fc_mp_logo_right.gif" width=30 
            border=0></TD></TR></TBODY></TABLE></TD></TR></TBODY></TABLE><!-- google_ad_section_end -->

<BR>
<DIV style="HEIGHT: 5px"></DIV>
</CENTER>
<CENTER><BR>
<H1>The .bmp file format</H1></CENTER><BR>
<H3>Introduction:</H3>The .bmp file format (sometimes also saved as .dib) is the 
standard for a Windows 3.0 or later <A 
href="http://fortunecity.com/skyscraper/windows/364/bmsinwin.html">DIB(device 
independent bitmap)</A> file. It may use compression (though I never came across 
a compressed .bmp-file) and is (by itself) not capable of storing animation. 
However, you can animate a bitmap using different methods but you have to write 
the code which performs the animation. There are different ways to compress a 
.bmp-file, but I won't explain them here because they are so rarely used. The 
image data itself can either contain pointers to entries in a color table or 
literal RGB values (this is explained later).
<P><BR>
<H3>Basic structure:</H3>A .bmp file contains of the following data structures: <PRE>BITMAPFILEHEADER    bmfh;
BITMAPINFOHEADER    bmih;
RGBQUAD             aColors[];
BYTE                aBitmapBits[];
</PRE><I>bmfh</I> contains some information about the bitmap file (about the 
file, not about the bitmap itself). <I>bmih</I> contains information about the 
bitmap such as size, colors,... The <I>aColors array</I> contains a color table. 
The rest is the image data, which format is specified by the <I>bmih</I> 
structure.
<P><BR>
<H3>Exact structure:</H3>The following tables give exact information about the 
data structures and also contain the settings for a bitmap with the following 
dimensions: size 100x100, 256 colors, no compression. The <I>start</I>-value is 
the position of the byte in the file at which the explained data element of the 
structure starts, the <I>size</I>-value contains the nuber of bytes used by this 
data element, the <I>name</I>-value is the name assigned to this data element by 
the Microsoft API documentation. <I>Stdvalue</I> stands for standard value. 
There actually is no such a thing as a standard value but this is the value 
Paint assigns to the data element if using the bitmap dimensions specified above 
(100x100x256). The <I>meaning</I>-column gives a short explanation of the 
purpose of this data element.
<P>
<H3>The BITMAPFILEHEADER:</H3>
<TABLE cellSpacing=0 cellPadding=3 border=1>
  <TBODY>
  <TR>
    <TD><B>start</B></TD>
    <TD><B>size</B></TD>
    <TD><B>name</B></TD>
    <TD><B>stdvalue</B></TD>
    <TD><B>purpose</B></TD></TR>
  <TR>
    <TD>1</TD>
    <TD>2</TD>
    <TD>bfType</TD>
    <TD>19778</TD>
    <TD>must always be set to 'BM' to declare that this is a .bmp-file.</TD></TR>
  <TR>
    <TD>3</TD>
    <TD>4</TD>
    <TD>bfSize</TD>
    <TD>??</TD>
    <TD>specifies the size of the file in bytes.</TD></TR>
  <TR>
    <TD>7</TD>
    <TD>2</TD>
    <TD>bfReserved1</TD>
    <TD>0</TD>
    <TD>must always be set to zero.</TD></TR>
  <TR>
    <TD>9</TD>
    <TD>2</TD>
    <TD>bfReserved2</TD>
    <TD>0</TD>
    <TD>must always be set to zero.</TD></TR>
  <TR>
    <TD>11</TD>
    <TD>4</TD>
    <TD>bfOffBits</TD>
    <TD>1078</TD>
    <TD>specifies the offset from the beginning of the file to the bitmap 
    data.</TD></TR></TBODY></TABLE>
<P><A name=bmih>
<H3>The BITMAPINFOHEADER:</H3>
<TABLE cellSpacing=0 cellPadding=3 border=1>
  <TBODY>
  <TR>
    <TD>start</TD>
    <TD>size</TD>
    <TD>name</TD>
    <TD>stdvalue</TD>
    <TD>purpose</TD></TR>
  <TR>
    <TD>15</TD>
    <TD>4</TD>
    <TD>biSize</TD>
    <TD>40</TD>
    <TD>specifies the size of the BITMAPINFOHEADER structure, in bytes.</TD></TR>
  <TR>
    <TD>19</TD>
    <TD>4</TD>
    <TD>biWidth</TD>
    <TD>100</TD>
    <TD>specifies the width of the image, in pixels.</TD></TR>
  <TR>
    <TD>23</TD>
    <TD>4</TD>
    <TD>biHeight</TD>
    <TD>100</TD>
    <TD>specifies the height of the image, in pixels.</TD></TR>
  <TR>
    <TD>27</TD>
    <TD>2</TD>
    <TD>biPlanes</TD>
    <TD>1</TD>
    <TD>specifies the number of planes of the target device, must be set to 
      zero.</TD></TR>
  <TR>
    <TD>29</TD>
    <TD>2</TD>
    <TD>biBitCount</TD>
    <TD>8</TD>
    <TD>specifies the number of bits per pixel.</TD></TR>
  <TR>
    <TD>31</TD>
    <TD>4</TD>
    <TD>biCompression</TD>
    <TD>0</TD>
    <TD>Specifies the type of compression, usually set to zero (no 
      compression).</TD></TR>
  <TR>
    <TD>35</TD>
    <TD>4</TD>
    <TD>biSizeImage</TD>
    <TD>0</TD>
    <TD>specifies the size of the image data, in bytes. If there is no 
      compression, it is valid to set this member to zero.</TD></TR>
  <TR>
    <TD>39</TD>
    <TD>4</TD>
    <TD>biXPelsPerMeter</TD>
    <TD>0</TD>
    <TD>specifies the the horizontal pixels per meter on the designated targer 
      device, usually set to zero.</TD></TR>
  <TR>
    <TD>43</TD>
    <TD>4</TD>
    <TD>biYPelsPerMeter</TD>
    <TD>0</TD>
    <TD>specifies the the vertical pixels per meter on the designated targer 
      device, usually set to zero.</TD></TR>
  <TR>
    <TD>47</TD>
    <TD>4</TD>
    <TD>biClrUsed</TD>
    <TD>0</TD>
    <TD>specifies the number of colors used in the bitmap, if set to zero the 
      number of colors is calculated using the biBitCount member.</TD></TR>
  <TR>
    <TD>51</TD>
    <TD>4</TD>
    <TD>biClrImportant</TD>
    <TD>0</TD>
    <TD>specifies the number of color that are 'important' for the bitmap, if 
      set to zero, all colors are important.</TD></TR></TBODY></TABLE><BR>Note that 
<I>biBitCount</I> actually specifies the color resolution of the bitmap. The 
possible values are: 1 (black/white); 4 (16 colors); 8 (256 colors); 24 (16.7 
million colors). The biBitCount data element also decides if there is a color 
table in the file and how it looks like. In 1-bit mode the color table has to 
contain 2 entries (usually white and black). If a bit in the image data is 
clear, it points to the first palette entry. If the bit is set, it points to the 
second. In 4-bit mode the color table must contain 16 colors. Every byte in the 
image data represents two pixels. The byte is split into the higher 4 bits and 
the lower 4 bits and each value of them points to a palette entry. There are 
also standard colors for 16 colors mode (16 out of Windows 20 <A 
href="http://fortunecity.com/skyscraper/windows/364/rescolrs.html">reserved 
colors</A> (without the entries 8, 9, 246, 247)). Note that you do not need to 
use this standard colors if the bitmap is to be displayed on a screen which 
support 256 colors or more, however (nearly) every 4-bit image uses this 
standard colors. In 8-bit mode every byte represents a pixel. The value points 
to an entry in the color table which contains 256 entries (for details see <A 
href="http://fortunecity.com/skyscraper/windows/364/palinwin.html">Palettes in 
Windows</A>. In 24-bit mode three bytes represent one pixel. The first byte 
represents the red part, the second the green and the third the blue part. There 
is no need for a palette because every pixel contains a literal RGB-value, so 
the palette is omitted.
<P>
<H3>The RGBQUAD array:</H3>The following table shows a single RGBQUAD 
structure:<BR>
<TABLE cellSpacing=0 cellPadding=3 border=1>
  <TBODY>
  <TR>
    <TD>start</TD>
    <TD>size</TD>
    <TD>name</TD>
    <TD>stdvalue</TD>
    <TD>purpose</TD></TR>
  <TR>
    <TD>1</TD>
    <TD>1</TD>
    <TD>rgbBlue</TD>
    <TD>-</TD>
    <TD>specifies the blue part of the color.</TD></TR>
  <TR>
    <TD>2</TD>
    <TD>1</TD>
    <TD>rgbGreen</TD>
    <TD>-</TD>
    <TD>specifies the green part of the color.</TD></TR>
  <TR>
    <TD>3</TD>
    <TD>1</TD>
    <TD>rgbRed</TD>
    <TD>-</TD>
    <TD>specifies the red part of the color.</TD></TR>
  <TR>
    <TD>4</TD>
    <TD>1</TD>
    <TD>rgbReserved</TD>
    <TD>-</TD>
    <TD>must always be set to zero.</TD></TR></TBODY></TABLE><BR>Note that the term 
<I>palette</I> does not refer to a RGBQUAD array, which is called <I>color 
table</I> instead. Also note that, in a color table (RGBQUAD), the specification 
for a color starts with the blue byte. In a palette a color always starts with 
the red byte. There is no simple way to map the whole color table into a 
LOGPALETTE structure, which you will need to display the bitmap. You will have 
to write a function that copies byte after byte.
<P>
<H3>The pixel data:</H3>It depens on the BITMAPINFOHEADER structure how the 
pixel data is to be interpreted (<A 
href="http://fortunecity.com/skyscraper/windows/364/bmpffrmt.html#bmih">see 
above</A>).<BR>It is important to know that the rows of a DIB are stored upside 
down. That means that the uppest row which appears on the screen actually is the 
lowest row stored in the bitmap, a short example:
<P>
<TABLE cellSpacing=0 cellPadding=10 width="100%">
  <TBODY>
  <TR>
    <TH width="50%"><IMG src="The _bmp file format_files/nhouse.gif"></TH>
    <TH width="50%"><IMG src="The _bmp file format_files/mhouse.gif" TH <> 
      </TR>
  <TR>
    <TH>pixels displayed on the screen</TH>
    <TH>pixels stored in .bmp-file</TH></TR></TBODY></TABLE>
<P>You do not need to turn around the rows manually. The API functions which 
also display the bitmap will do that for you automatically.<BR>Another important 
thing is that the number of bytes in one row must always be adjusted to fit into 
the border of a multiple of four. You simply append zero bytes until the number 
of bytes in a row reaches a multiple of four, an example:
<P>
<TABLE cellSpacing=0 cellPadding=5 border=0>
  <TBODY>
  <TR>
    <TD align=right><TT>6 bytes that represent a row in the bitmap:</TT></TD>
    <TD><TT>A0 37 F2 8B 31 C4</TT></TD></TR>
  <TR>
    <TD align=right><TT>must be saved as:</TT></TD>
    <TD><TT>A0 37 F2 8B 31 C4 <B>00 00</B></TT></TD></TR></TBODY></TABLE>
<P>to reach the multiple of four which is the next higher after six (eight). If 
you keep these few rules in mind while working with .bmp&nbsp;files it should be 
easy for you, to master it.
<P><A href="http://fortunecity.com/skyscraper/windows/364/index.html">Back to 
the main page</A>
<P><BR>
<HR>
Copyright 1998 Stefan Hetzl. If you have questions or comments or have 
discovered an error, <A href="mailto:hetzl@teleweb.at">send mail</A> to 
hetzl@teleweb.at. You may forward this document or publish it on your webpage as 
long as you don't change it and leave this notice at the end.

</BODY></HTML>
