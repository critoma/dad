Linux UBUNTU 16:

//set env variables:

export JAVA_HOME=/opt/software/java/jdks/jdk1.8.0_161
#export CATALINA_HOME=/opt/software/apache-tomee-plume-7.0.4
export CATALINA_HOME=/opt/software/apache-tomcat-9.0.4
export PATH=$JAVA_HOME/bin:$CATALINA_HOME/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games
export CLASSPATH=.:$JAVA_HOME/jre/lib/rt.jar:$CATALINA_HOME/lib/servlet-api.jar
export DAD=/home/stud/dad/lectures

cd $DAD/c04/src/S10_Servlets/S09


A. Java Servlet Technology Intro


1. 

cd WEB-INF/classes

2. Compile

javac -classpath $CLASSPATH eu/ase/servlets/HelloWWW.java
javac -classpath $CLASSPATH eu/ase/servlets/ThreeParams.java
javac -classpath $CLASSPATH eu/ase/servlets/ShowParameters.java
javac -classpath $CLASSPATH eu/ase/servlets/ShowRequestHeaders.java
javac -classpath $CLASSPATH eu/ase/servlets/SetResponseHeader.java
javac -classpath $CLASSPATH eu/ase/servlets/SetGetCookie.java
javac -classpath $CLASSPATH eu/ase/servlets/ShowSession.java

3. Create and Tailor the web.xml file from WEB-INF directory

WEB-INF
    |
     ---web.xml
    |
     ---classes
          |
           ------eu/ase/servlets...


<?xml version="1.0" encoding="ISO-8859-1"?>

<web-app xmlns="http://java.sun.com/xml/ns/j2ee"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd"
    version="2.4">
  <display-name>Servlets Labs</display-name>
  
  <servlet>
        <servlet-name>S1</servlet-name>
        <servlet-class>eu.ase.servlets.HelloWWW</servlet-class>
  </servlet>

  <servlet-mapping>
        <servlet-name>
            S1
        </servlet-name>
        <url-pattern>
            /HelloWWW
        </url-pattern>
   </servlet-mapping>

....

</web-app>

4. Create web archive

cd $DAD/c04/src/S10_Servlets/S09

jar -cvf S09.war *.html WEB-INF/classes/eu/ase/servlets/*.class WEB-INF/web.xml

rm WEB-INF/classes/eu/ase/servlets/*.class

5. Deploy

cp ./S09.war $CATALINA_HOME/webapps/S09.war

rm S09.war

6. Start & Stop web server Apache Tomcat 7 / 8 / 9 / TomEE

sudo su
#export all env varialbles +
chmod 755 *.sh

./startup.sh
./shutdown.sh

7. Test
http://127.0.0.1:8080/S09/HelloWWW
http://127.0.0.1:8080/S09/ThreeParams?param1=test 1&param2=text test 2&param3= invatati si ganditi
http://127.0.0.1:8080/S09/FormData1.html
http://127.0.0.1:8080/S09/ShowRequestHeaders
http://127.0.0.1:8080/S09/SetResponseHeader
http://127.0.0.1:8080/S09/SetGetCookie
http://127.0.0.1:8080/S09/ShowSession

//ISM CA
//MUST have same pass at keystore as keypass for Apache Tomcat
keytool -genkey -keyalg RSA -sigalg "SHA1withRSA" -alias ISMCert1 -storepass ismpasss -keypass ismpasss -keystore keystoreISM.ks -keysize 1024 -dname "CN=www.ism.ase.ro, OU=Informatics Security Master, O=ISM Certificate Authority, c=RO" -validity 730

# keytool -genkey -keyalg RSA -sigalg "SHA1withRSA" -alias ISMCert1 -storepass ismpasss -keypass ismpassk -keystore keystoreISM.ks -keysize 1024 -dname "CN=www.ism.ase.ro, OU=Informatics Security Master, O=ISM Certificate Authority, c=RO" -validity 730

//export certificate for SSL
keytool -export -alias ISMCert1 -file ISMCertificateBase64X509.cer -rfc -keystore keystoreISM.ks
keytool -export -alias ISMCert1 -storepass ismpasss -keypass ismpassk -file ISMCertificateBase64X509.cer -rfc -keystore keystoreISM.ks

//copy keystore in Apache Tomcat
mkdir $CATALINA_HOME/conf/certificates
copy ./keystoreISM.ks $CATALINA_HOME/conf/certificates/keystoreISM.ks

//modify server.xml from %CATALINA_HOME%\conf + try only with Mozzila

<Connector port="8443" minSpareThreads="5" maxSpareThreads="75"
           ciphers="TLS_RSA_WITH_AES_128_CBC_SHA" 
           enableLookups="true" disableUploadTimeout="true" 
           acceptCount="100"  maxThreads="200"
           scheme="https" secure="true" SSLEnabled="true"
           keystoreFile="./conf/certificates/keystoreISM.ks" keystorePass="ismpasss"
           clientAuth="false" sslProtocol="TLS"/>




#############################################################################################
# https://cloud.google.com/appengine/docs/flexible/java/quickstart
# in Google App Engine - Cloud PaaS deploy and run a servlet - in Browser (Google Chrome):
# secitc@gmail.com
# https://ssh.cloud.google.com/cloudshell/editor
# 
# https://cloud.google.com/appengine/docs/standard/java/quickstart
https://console.cloud.google.com/projectcreate?previousPage=%2Fprojectselector2%2Fbilling%3Flang%3Djava%26st%3Dtrue%26_ga%3D2.187602464.925220531.1582115517-284239323.1582115517%26pli%3D1&project=&folder=&organizationId=0
https://ssh.cloud.google.com/cloudshell/editor

#secitc@cloudshell:~$ gcloud projects create wserv001
Create in progress for [https://cloudresourcemanager.googleapis.com/v1/projects/wserv001].
Waiting for [operations/cp.6948705858711736411] to finish...done.
Enabling service [cloudapis.googleapis.com] on project [wserv001]...
Operation "operations/acf.d97afd5e-9a6c-4eb6-81a1-ee6fa07cdb62" finished successfully.

### it must be created from Web GUI

secitc@cloudshell:~$ gcloud projects describe wserv0001
createTime: '2020-02-19T12:38:54.623Z'
lifecycleState: ACTIVE
name: wserv001
projectId: wserv001
projectNumber: '163714956555'


secitc@cloudshell:~$ gcloud app create --project=wserv0001
Please enter your numeric choice:  6

Please choose the region where you want your App Engine application located:
 [1] asia-east2    (supports standard and flexible)
 [2] asia-northeast1 (supports standard and flexible)
 [3] asia-northeast2 (supports standard and flexible)
 [4] asia-south1   (supports standard and flexible)
 [5] australia-southeast1 (supports standard and flexible)
 [6] europe-west   (supports standard and flexible)

Creating App Engine application in project [wserv0001] and region [europe-west]....done.
Success! The app is now created. Please use `gcloud app deploy` to deploy your first app.

cristian...@cloudshell:~$ #https://github.com/GoogleCloudPlatform/appengine-try-java
cristian...@cloudshell:~$ git clone https://github.com/GoogleCloudPlatform/appengine-try-java.git
// https://console.cloud.google.com/cloud-resource-manager?authuser=0&orgonly=true&supportedpurview=project,organizationId,folder&project=&folder=&organizationId=
// https://console.cloud.google.com/cloud-resource-manager?folder=&organizationId=0&authuser=3&orgonly=true&supportedpurview=project,organizationId,folder
// Billing: https://console.cloud.google.com/billing/015780-E3245A-04E6B3?authuser=0

secitc@cloudshell:~$ git clone https://github.com/GoogleCloudPlatform/getting-started-java.git
Cloning into 'getting-started-java'...
remote: Enumerating objects: 8953, done.
remote: Total 8953 (delta 0), reused 0 (delta 0), pack-reused 8953
Receiving objects: 100% (8953/8953), 50.98 MiB | 24.11 MiB/s, done.
Resolving deltas: 100% (5004/5004), done.
secitc@cloudshell:~$ pwd
/home/secitc
secitc@cloudshell:~$ ls
getting-started-java  README-cloudshell.txt


cd getting-started-java/appengine-standard-java8/helloworld
cd /home/cristian.../wserv0001/appengine-try-java 
cristian...@cloudshell:~/wserv0001/appengine-try-java$ pwd


# localhost
mvn clean appengine:run
mvn package appengine:run -DprojectId=wserv0001

# real instance
gcloud config set project wserv0001
gcloud config set project wserv0003
gcloud config unset project
# modify wserv0001 in pom.xml and then:
# be sure  in Settings from https://console.cloud.google.com/cloud-build/settings/service-account?project=wserv0003
# Enabled Cloud Build API for your gmail account (https://console.cloud.google.com/marketplace/product/google/cloudbuild.googleapis.com?project=wserv0003) 
# and permission are set - App Engine Admin Enabled (https://console.cloud.google.com/apis/library/appengine.googleapis.com?project=wserv0003)
mvn clean appengine:deploy
mvn package appengine:deploy

# https://wserv0003.ew.r.appspot.com/index.html

# https://wserv0001.appspot.com
# https://wserv0001.appspot.com/hello

# check your billing account: https://console.cloud.google.com/billing/015780-E3245A-04E6B3?authuser=0
gcloud app browse


###############################

secitc@cloudshell:~/getting-started-java/appengine-standard-java8/helloworld (wserv0001)$ pwd
/home/secitc/getting-started-java/appengine-standard-java8/helloworld
secitc@cloudshell:~/getting-started-java/appengine-standard-java8/helloworld (wserv0001)$ cat src/main/java/com/example/appengine/java8/HelloAppEngine.java


package com.example.appengine.java8;
//Copyright 2017 Google Inc.
// [START example]
import com.google.appengine.api.utils.SystemProperty;
import java.io.IOException;
import java.util.Properties;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
// With @WebServlet annotation the webapp/WEB-INF/web.xml is no longer required.


@WebServlet(name = "HelloAppEngine", value = "/hello")
public class HelloAppEngine extends HttpServlet {
  @Override
  public void doGet(HttpServletRequest request, HttpServletResponse response)
      throws IOException {
    Properties properties = System.getProperties();
    response.setContentType("text/plain");
    response.getWriter().println("Hello App Engine Demo - Standard using "
            + SystemProperty.version.get() + " Java/Kotlin "
            + properties.get("java.specification.version"));
  }

  public static String getInfo() {
    return "Version: " + System.getProperty("java.version")
          + " OS: " + System.getProperty("os.name")
          + " User: " + System.getProperty("user.name");
  }

}

/*
// be sure in web.xml is edit properly
*/
# https://wserv0003.ew.r.appspot.com/hello

###############################

# Google Cloud Platform -> Manage Resources:
# https://console.cloud.google.com/cloud-resource-manager?_ga=2.220128794.2046612007.1583315144-1892989119.1583315144&pli=1
# go in web and delete the project


